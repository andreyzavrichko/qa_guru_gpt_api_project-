plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
    id "io.freefair.lombok" version "8.12"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.14.0",
    junitVersion = "5.7.2",
    javaFakerVersion = "1.0.2",
    assertjVersion = "3.22.0",
    ownerVersion = "1.0.12",
    jacksonVersion = '2.13.4.2',
    restAssuredVersion = "5.5.0",
    aspectjweaverVersion = "1.9.6",
    slf4jVersion = "1.7.29"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}